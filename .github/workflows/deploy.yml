name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

# 设置 GITHUB_TOKEN 权限以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过正在进行的运行之间排队的运行
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # 自动配置 Next.js 的 basePath
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
          echo "Dependencies installed successfully"

      - name: Build with Next.js
        env:
          GITHUB_PAGES: true
          NODE_ENV: production
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "=== Building for GitHub Pages ==="
          echo "Repository: ${{ github.repository }}"
          echo "Base path will be: /${{ github.event.repository.name }}"
          echo "Environment variables:"
          echo "NODE_ENV=$NODE_ENV"
          echo "GITHUB_PAGES=$GITHUB_PAGES"
          echo "PWD=$(pwd)"
          echo "================================="

          echo "=== Checking Next.js configuration ==="
          if [ -f "next.config.ts" ]; then
            echo "✅ next.config.ts found"
            head -20 next.config.ts
          elif [ -f "next.config.js" ]; then
            echo "✅ next.config.js found"
            head -20 next.config.js
          else
            echo "❌ next.config file not found"
          fi
          echo "======================================"

          echo "=== Checking posts directory ==="
          if [ -d "posts" ]; then
            echo "✅ posts directory found"
            ls -la posts/
          else
            echo "❌ posts directory not found"
          fi
          echo "================================"

          echo "=== Running build command ==="
          ${{ steps.detect-package-manager.outputs.manager }} run build:github
          echo "Build command completed with exit code: $?"
          echo "============================="

          echo "=== Checking build output ==="
          echo "Current directory contents:"
          ls -la

          echo "Checking if .next directory exists..."
          if [ -d ".next" ]; then
            echo "✅ .next directory found"
            ls -la .next/
          else
            echo "❌ .next directory not found"
          fi

          echo "Checking if out directory exists..."
          if [ -d "out" ]; then
            echo "✅ out directory found"
            ls -la out/
            echo "Checking out directory contents:"
            find out -type f -name "*.html" | head -10
          else
            echo "❌ out directory not found"
            echo "This indicates Next.js static export failed"
          fi
          echo "============================="

      - name: Verify build output
        run: |
          echo "Checking build output..."
          ls -la out/
          echo "Checking if index.html exists..."
          if [ -f "out/index.html" ]; then
            echo "✅ index.html found"
            head -20 out/index.html
          else
            echo "❌ index.html not found"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
